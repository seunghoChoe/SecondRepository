<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mappers.PostMapper">

    <!-- resultMap 에 id 값을 사용한다. -->
    <resultMap id="PostMap" type="Post">
        <result property="postId" column="post_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="postUserId" column="post_user_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="postTitle" column="post_title" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="postContent" column="post_content" javaType="java.lang.String" jdbcType="VARCHAR"/>
        <result property="postCreatedAt" column="post_created_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="postUpdatedAt" column="post_updated_at" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="postView" column="post_view" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="postLike" column="post_like" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="postComment" column="post_comment" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="postIsDeleted" column="post_is_deleted" javaType="java.lang.Boolean" jdbcType="TINYINT"/>
    </resultMap>

    <resultMap id="PostLikeMap" type="PostLike">
        <result property="likePostId" column="like_post_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        <result property="likeUserId" column="like_user_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- INSERT 작업                                                                                                    INSERT 작업 -->
    <!-- 게시글 등록 -->
    <insert id="insertPost" parameterType="Post">
		INSERT
		INTO post (post_user_id, post_title, post_content)
		VALUES (#{postUserId}, #{postTitle}, #{postContent})
	</insert>

    <!-- 게시글 좋아요 등록 -->
    <insert id="insertPostLike" parameterType="PostLike">
		INSERT
		INTO post_like (like_post_id, like_user_id)
		VALUES (#{likePostId}, #{likeUserId})
	</insert>


    <!-- SELECT 작업                                                                                                    SELECT 작업 -->
    <!-- 게시글 개수 조회 -->
    <select id="countAllPost" parameterType="boolean" resultType="int">
        SELECT COUNT(*)
        FROM post
        WHERE post_is_deleted = #{postIsDeleted}
    </select>

    <!-- 게시글 개수 조회 (검색) -->
    <select id="countSearchPost" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM post
        WHERE post_is_deleted = #{postIsDeleted} AND ${searchOption} LIKE CONCAT ('%', #{searchKeyword}, '%')
    </select>

    <!-- 게시글 목록 조회 -->
    <select id="selectPostList" parameterType="map" resultMap="PostMap">
		SELECT *
        FROM post
        WHERE post_is_deleted = #{postIsDeleted}
        ORDER BY post_id DESC
        LIMIT #{pageStart}, #{perPageNum}
	</select>

    <!-- 게시글 목록 조회 (검색) -->
    <select id="selectSearchPostList" parameterType="map" resultMap="PostMap">
		SELECT *
        FROM post
        WHERE post_is_deleted = #{postIsDeleted} AND ${searchOption} LIKE CONCAT ('%', #{searchKeyword}, '%')
        ORDER BY post_id DESC
        LIMIT #{pageStart}, #{perPageNum}
    </select>

    <!-- 게시글 상세 조회  -->
    <select id="selectPost" parameterType="Post" resultMap="PostMap">
        SELECT *
        FROM post
        WHERE post_id = #{postId} AND post_is_deleted = #{postIsDeleted};
    </select>

    <!-- 게시글 작성자 검사 -->
    <select id="countPostUserId" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM post
        WHERE post_id = #{postId} AND post_user_id = #{loggedUserId}
    </select>

    <!-- 게시글 좋아요 검사 -->
    <select id="countPostLike" parameterType="PostLike" resultType="int">
		SELECT COUNT(*)
		FROM post_like
		WHERE like_post_id = #{likePostId} AND like_user_id = #{likeUserId}
	</select>


    <!-- UPDATE 작업                                                                                                    UPDATE 작업 -->
    <!-- 게시글 수정 -->
    <update id="updatePost" parameterType="Post">
        UPDATE post
        SET post_title = #{postTitle}, post_content = #{postContent}, post_updated_at = now()
        WHERE post_id = #{postId} AND post_user_id = #{postUserId}
    </update>

    <!-- 게시글 삭제 수정 -->
    <update id="updatePostIsDeleted" parameterType="Post">
        UPDATE post
        SET post_is_deleted = #{postIsDeleted}
        WHERE post_id = #{postId} AND post_user_id = #{postUserId}
    </update>

    <!-- 게시글 조회수 수정 -->
    <update id="updatePostView" parameterType="int">
        UPDATE post
        SET post_view = post_view + 1
        WHERE post_id = #{postId}
	</update>

    <!-- 게시글 좋아요수 갱신 -->
    <update id="updatePostLike" parameterType="map">
        UPDATE post
        <choose>
            <when test="isAdd == true">SET post_like = post_like + 1</when>
            <otherwise>SET post_like = post_like - 1</otherwise>
        </choose>
        WHERE post_id = #{postId}
    </update>

    <!-- 게시글 댓글수 갱신 -->
    <update id="updatePostComment" parameterType="map">
        UPDATE post
        <choose>
            <when test="isAdd == true">SET post_comment = post_comment + 1</when>
            <otherwise>SET post_comment = post_comment - 1</otherwise>
        </choose>
        WHERE post_id = #{postId}
    </update>


    <!-- DELETE 작업                                                                                                    DELETE 작업 -->
    <!-- 게시글 좋아요 취소 -->
    <delete id="deletePostLike" parameterType="PostLike">
		DELETE
		FROM post_like
		WHERE like_post_id = #{likePostId} AND like_user_id = #{likeUserId}
	</delete>

</mapper>